// <auto-generated />
using System;
using HotelReservation.Infrastructure.AppDb;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelReservation.Migrations
{
    [DbContext(typeof(AppDbCntext))]
    [Migration("20251014095900_seeddata")]
    partial class seeddata
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotelReservation.Entities.HotelRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<float>("PricePerNight")
                        .HasColumnType("real");

                    b.Property<int>("RoomDetailId")
                        .HasColumnType("int");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("RoomDetailId")
                        .IsUnique();

                    b.ToTable("HotelRooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 3,
                            CreatedAt = new DateTime(2025, 10, 14, 13, 28, 57, 629, DateTimeKind.Local).AddTicks(1608),
                            PricePerNight = 200f,
                            RoomDetailId = 1,
                            RoomNumber = "1"
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 4,
                            CreatedAt = new DateTime(2025, 10, 14, 13, 28, 57, 630, DateTimeKind.Local).AddTicks(8619),
                            PricePerNight = 300f,
                            RoomDetailId = 2,
                            RoomNumber = "2"
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 2,
                            CreatedAt = new DateTime(2025, 10, 14, 13, 28, 57, 630, DateTimeKind.Local).AddTicks(8634),
                            PricePerNight = 100f,
                            RoomDetailId = 3,
                            RoomNumber = "3"
                        },
                        new
                        {
                            Id = 4,
                            Capacity = 2,
                            CreatedAt = new DateTime(2025, 10, 14, 13, 28, 57, 630, DateTimeKind.Local).AddTicks(8636),
                            PricePerNight = 500f,
                            RoomDetailId = 4,
                            RoomNumber = "4"
                        });
                });

            modelBuilder.Entity("HotelReservation.Entities.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("HotelRoomId")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HotelRoomId");

                    b.HasIndex("UserId");

                    b.HasIndex("RoomId", "CheckInDate", "CheckOutDate");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("HotelReservation.Entities.RoomDetail", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("HasAirConditioner")
                        .HasColumnType("bit");

                    b.Property<bool>("HasWifi")
                        .HasColumnType("bit");

                    b.HasKey("RoomId");

                    b.ToTable("RoomDetails");

                    b.HasData(
                        new
                        {
                            RoomId = 1,
                            Description = "Ocean Breeze Suite A spacious\r\ncorner suite with panoramic sea views,\r\nfeaturing a king-size bed, private balcony,\r\nrainfall shower, and complimentary minibar.\r\nPerfect for honeymooners or sunset lovers.",
                            HasAirConditioner = true,
                            HasWifi = true
                        },
                        new
                        {
                            RoomId = 2,
                            Description = "Urban Escape Deluxe Modern city-facing \r\nroom with floor-to-ceiling windows,\r\nqueen bed, ergonomic workspace, and smart\r\nlighting. Includes access to rooftop \r\npool and 24-hour fitness center.",
                            HasAirConditioner = true,
                            HasWifi = false
                        },
                        new
                        {
                            RoomId = 3,
                            Description = "Rustic Mountain Retreat Cozy \r\nwood-paneled room with fireplace, double bed\r\n, and vintage decor. Offers direct access to \r\nhiking trails and includes a hearty breakfast\r\nbasket delivered each morning.",
                            HasAirConditioner = false,
                            HasWifi = true
                        },
                        new
                        {
                            RoomId = 4,
                            Description = "Zen Garden Studio Minimalist design \r\nwith tatami flooring, low platform bed,\r\nand indoor bonsai corner. Comes with herbal\r\ntea station, yoga mat, and ambient\r\nsound system for relaxation.",
                            HasAirConditioner = true,
                            HasWifi = true
                        });
                });

            modelBuilder.Entity("HotelReservation.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 10, 14, 13, 28, 57, 633, DateTimeKind.Local).AddTicks(9558),
                            Password = "12345",
                            Role = "Admin",
                            UserName = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 10, 14, 13, 28, 57, 633, DateTimeKind.Local).AddTicks(9935),
                            Password = "12345",
                            Role = "Receptionist",
                            UserName = ""
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 10, 14, 13, 28, 57, 633, DateTimeKind.Local).AddTicks(9939),
                            Password = "12345",
                            Role = "NormalUser",
                            UserName = "behnazbayatloo"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 10, 14, 13, 28, 57, 633, DateTimeKind.Local).AddTicks(9941),
                            Password = "12345",
                            Role = "NormalUser",
                            UserName = "meysambeigi"
                        });
                });

            modelBuilder.Entity("HotelReservation.Entities.HotelRoom", b =>
                {
                    b.HasOne("HotelReservation.Entities.RoomDetail", "RoomDetail")
                        .WithOne()
                        .HasForeignKey("HotelReservation.Entities.HotelRoom", "RoomDetailId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("RoomDetail");
                });

            modelBuilder.Entity("HotelReservation.Entities.Reservation", b =>
                {
                    b.HasOne("HotelReservation.Entities.HotelRoom", "HotelRoom")
                        .WithMany("Reservations")
                        .HasForeignKey("HotelRoomId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HotelReservation.Entities.User", "User")
                        .WithMany("Reservations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("HotelRoom");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HotelReservation.Entities.HotelRoom", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("HotelReservation.Entities.User", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
